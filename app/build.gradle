apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.apps.albertmartorell.meteomarto"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = "1.8"
        sourceCompatibility = "1.8"
    }
    buildToolsVersion = '28.0.3'

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Karumi library that simplifies the process of requesting permissions at runtime.
    //implementation 'com.karumi:dexter:6.0.1'
    //implementation "com.google.android.gms:play-services-location:17.0.0"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    //implementation "androidx.appcompat:appcompat:1.1.0"
    //implementation "androidx.core:core-ktx:1.1.0"
    //implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    //reference the data, usecases and domain modules from the app module
    implementation project(':data')
    implementation project(':usecases')
    implementation project(':domain')

    implementation androidLibs.values()
    implementation kotlinLibs.values()
    implementation libs.values()
    kapt androidKaptLibs.values()

    testImplementation testLibs.values()
    androidTestImplementation androidTestLibs.values()

    // Retrofit
    //implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    //implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    //implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Room
    //implementation "androidx.room:room-runtime:$roomVersion"
    // Test helpers
    //testImplementation "androidx.room:room-testing:$roomVersion"

    // optional - Kotlin Extensions and Coroutines support for Room
    //implementation "androidx.room:room-ktx:$roomVersion"
    //kapt "androidx.room:room-compiler:$roomVersion"

    // navigation
    //implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    //implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // architecture components
    //implementation 'android.arch.lifecycle:extensions:1.1.1'
    //implementation 'android.arch.lifecycle:viewmodel:1.1.1'

    //Live Data
    //implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$liveDataVersion"
    //implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataVersion"
    //implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$liveDataVersion"

    // Glide for loading images
    //implementation 'com.github.bumptech.glide:glide:4.11.0'
    //annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // RecyclerView
    //implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Koin AndroidX Scope features
    //implementation "org.koin:koin-android:$koinVersion"
    // Koin AndroidX ViewModel features
    //implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    // Koin AndroidX Scope features
    //implementation "org.koin:koin-androidx-scope:$koinVersion"
    //implementation "org.koin:koin-core:$koinVersion"

    // Testing
    //testImplementation "junit:junit:$jUnitVersion"
    // Mockito omple amb nulls els valors de les classes que mockeja. I això ens pot donar problemes amb classes
    // amb valors no nullables.
    //testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    // com que en Kotlin les classes són final per defecte, utilitzarem aquesta feature que és capaç de moquejar
    // aquestes classes final. Així evitem d'haver de fer codi específic per a testing.
    //testImplementation "org.mockito:mockito-inline:2.28.2"
}
